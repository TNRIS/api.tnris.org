# Generated by Django 2.0.6 on 2018-07-10 20:57

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('lcd', '0002_auto_20180706_1533'),
    ]

    operations = [
        migrations.CreateModel(
            name='AreaType',
            fields=[
                ('area_type_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Area Type ID')),
                ('area_type', models.CharField(choices=[('state', 'state'), ('county', 'county'), ('quad', 'quad'), ('qquad', 'qquad'), ('natgrid', 'natgrid')], max_length=20, verbose_name='Area Type')),
                ('area_type_name', models.CharField(max_length=50, verbose_name='Area Type Name')),
                ('orig_data_download_id', models.PositiveIntegerField(null=True, verbose_name='Original Data Download ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
            options={
                'verbose_name': 'Area Type',
                'verbose_name_plural': 'Area Types',
                'db_table': 'area_type',
            },
        ),
        migrations.CreateModel(
            name='BandRelate',
            fields=[
                ('band_relate_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Band Relate ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
            options={
                'verbose_name': 'Band',
                'verbose_name_plural': 'Bands',
                'db_table': 'band_relate',
            },
        ),
        migrations.CreateModel(
            name='CategoryRelate',
            fields=[
                ('category_relate_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Category Relate ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'db_table': 'category_relate',
            },
        ),
        migrations.CreateModel(
            name='DataTypeRelate',
            fields=[
                ('data_type_relate_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Data Type Relate ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
                ('collection_id', models.ForeignKey(db_column='collection_id', on_delete=django.db.models.deletion.CASCADE, related_name='data_type_collections', to='lcd.Collection')),
                ('data_type_id', models.ForeignKey(db_column='data_type_id', on_delete=django.db.models.deletion.CASCADE, related_name='data_types', to='lcd.DataType')),
            ],
            options={
                'verbose_name': 'Data Type',
                'verbose_name_plural': 'Data Types',
                'db_table': 'data_type_relate',
            },
        ),
        migrations.CreateModel(
            name='FileTypeRelate',
            fields=[
                ('file_type_relate_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='File Type Relate ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
                ('collection_id', models.ForeignKey(db_column='collection_id', on_delete=django.db.models.deletion.CASCADE, related_name='file_type_collections', to='lcd.Collection')),
                ('file_type_id', models.ForeignKey(db_column='file_type_id', on_delete=django.db.models.deletion.CASCADE, related_name='file_types', to='lcd.FileType')),
            ],
            options={
                'verbose_name': 'File Type',
                'verbose_name_plural': 'File Types',
                'db_table': 'file_type_relate',
            },
        ),
        migrations.CreateModel(
            name='ResolutionRelate',
            fields=[
                ('resolution_relate_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Resolution Relate ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
                ('collection_id', models.ForeignKey(db_column='collection_id', on_delete=django.db.models.deletion.CASCADE, related_name='resolution_collections', to='lcd.Collection')),
                ('resolution_type_id', models.ForeignKey(db_column='resolution_type_id', on_delete=django.db.models.deletion.CASCADE, related_name='resolution_types', to='lcd.ResolutionType')),
            ],
            options={
                'verbose_name': 'Resolution',
                'verbose_name_plural': 'Resolutions',
                'db_table': 'resolution_relate',
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('resource_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Resource ID')),
                ('resource_type', models.CharField(choices=[('download', 'download'), ('order', 'order'), ('website', 'website')], max_length=20, verbose_name='Resource Type')),
                ('resource', models.URLField(max_length=255, verbose_name='Resource URL')),
                ('filesize', models.PositiveIntegerField(verbose_name='Filesize')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
                ('area_type_id', models.ForeignKey(db_column='area_type_id', on_delete=django.db.models.deletion.CASCADE, related_name='area_types', to='lcd.AreaType')),
                ('collection_id', models.ForeignKey(db_column='collection_id', on_delete=django.db.models.deletion.CASCADE, related_name='collections', to='lcd.Collection')),
            ],
            options={
                'verbose_name': 'Resource',
                'verbose_name_plural': 'Resources',
                'db_table': 'resource',
            },
        ),
        migrations.CreateModel(
            name='UseRelate',
            fields=[
                ('use_relate_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Use Relate ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
                ('collection_id', models.ForeignKey(db_column='collection_id', on_delete=django.db.models.deletion.CASCADE, related_name='use_collections', to='lcd.Collection')),
                ('use_type_id', models.ForeignKey(db_column='use_type_id', on_delete=django.db.models.deletion.CASCADE, related_name='use_types', to='lcd.UseType')),
            ],
            options={
                'verbose_name': 'Use',
                'verbose_name_plural': 'Uses',
                'db_table': 'use_relate',
            },
        ),
        migrations.DeleteModel(
            name='CountyType',
        ),
        migrations.DeleteModel(
            name='QQuadType',
        ),
        migrations.DeleteModel(
            name='QuadType',
        ),
        migrations.DeleteModel(
            name='StateType',
        ),
        migrations.DeleteModel(
            name='UsngType',
        ),
        migrations.DeleteModel(
            name='ZippedByAreaType',
        ),
        migrations.AlterModelOptions(
            name='bandtype',
            options={'verbose_name': 'Band Type', 'verbose_name_plural': 'Band Types'},
        ),
        migrations.AlterModelOptions(
            name='categorytype',
            options={'verbose_name': 'Category Type', 'verbose_name_plural': 'Category Types'},
        ),
        migrations.AlterModelOptions(
            name='licensetype',
            options={'verbose_name': 'License Type', 'verbose_name_plural': 'License Types'},
        ),
        migrations.AlterModelOptions(
            name='sourcetype',
            options={'verbose_name': 'Source Type', 'verbose_name_plural': 'Source Types'},
        ),
        migrations.AlterModelOptions(
            name='templatetype',
            options={'verbose_name': 'Template Type', 'verbose_name_plural': 'Template Types'},
        ),
        migrations.AddField(
            model_name='epsgrelate',
            name='created',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now, verbose_name='Created'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='epsgrelate',
            name='last_modified',
            field=models.DateTimeField(auto_now=True, verbose_name='Last Modified'),
        ),
        migrations.AlterField(
            model_name='epsgrelate',
            name='collection_id',
            field=models.ForeignKey(db_column='collection_id', on_delete=django.db.models.deletion.CASCADE, related_name='epsg_collections', to='lcd.Collection'),
        ),
        migrations.AlterField(
            model_name='epsgrelate',
            name='epsg_relate_id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='EPSG Relate ID'),
        ),
        migrations.AlterField(
            model_name='sourcetype',
            name='source_name',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Source Name'),
        ),
        migrations.AlterUniqueTogether(
            name='epsgrelate',
            unique_together={('epsg_type_id', 'collection_id')},
        ),
        migrations.AlterUniqueTogether(
            name='sourcetype',
            unique_together={('source_name', 'source_abbreviation', 'source_website', 'source_contact')},
        ),
        migrations.AddField(
            model_name='categoryrelate',
            name='category_type_id',
            field=models.ForeignKey(db_column='category_type_id', on_delete=django.db.models.deletion.CASCADE, related_name='category_types', to='lcd.CategoryType'),
        ),
        migrations.AddField(
            model_name='categoryrelate',
            name='collection_id',
            field=models.ForeignKey(db_column='collection_id', on_delete=django.db.models.deletion.CASCADE, related_name='category_collections', to='lcd.Collection'),
        ),
        migrations.AddField(
            model_name='bandrelate',
            name='band_type_id',
            field=models.ForeignKey(db_column='band_type_id', on_delete=django.db.models.deletion.CASCADE, related_name='band_types', to='lcd.BandType'),
        ),
        migrations.AddField(
            model_name='bandrelate',
            name='collection_id',
            field=models.ForeignKey(db_column='collection_id', on_delete=django.db.models.deletion.CASCADE, related_name='band_collections', to='lcd.Collection'),
        ),
        migrations.AlterUniqueTogether(
            name='areatype',
            unique_together={('area_type', 'area_type_name')},
        ),
        migrations.AlterUniqueTogether(
            name='userelate',
            unique_together={('use_type_id', 'collection_id')},
        ),
        migrations.AlterUniqueTogether(
            name='resolutionrelate',
            unique_together={('resolution_type_id', 'collection_id')},
        ),
        migrations.AlterUniqueTogether(
            name='filetyperelate',
            unique_together={('file_type_id', 'collection_id')},
        ),
        migrations.AlterUniqueTogether(
            name='datatyperelate',
            unique_together={('data_type_id', 'collection_id')},
        ),
        migrations.AlterUniqueTogether(
            name='categoryrelate',
            unique_together={('category_type_id', 'collection_id')},
        ),
    ]
