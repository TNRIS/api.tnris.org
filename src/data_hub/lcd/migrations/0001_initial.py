# Generated by Django 2.0.6 on 2018-07-06 19:50

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BandType',
            fields=[
                ('band_type_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Band Type ID')),
                ('band_name', models.CharField(max_length=100, unique=True, verbose_name='Band Name')),
                ('band_abbreviation', models.CharField(max_length=10, verbose_name='Band Abbreviation')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
            options={
                'verbose_name': 'Band',
                'verbose_name_plural': 'Bands',
                'db_table': 'band_type',
            },
        ),
        migrations.CreateModel(
            name='CategoryType',
            fields=[
                ('category_type_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Category Type ID')),
                ('category', models.CharField(max_length=50, unique=True, verbose_name='Category')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'db_table': 'category_type',
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='CountyType',
            fields=[
                ('county_type_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='County Type ID')),
                ('county_fips', models.PositiveIntegerField(unique=True, verbose_name='County FIPS')),
                ('county_name', models.CharField(max_length=20, unique=True, verbose_name='County Name')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
            options={
                'verbose_name': 'County',
                'verbose_name_plural': 'Counties',
                'db_table': 'county_type',
            },
        ),
        migrations.CreateModel(
            name='DataType',
            fields=[
                ('data_type_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Data Type ID')),
                ('data_type', models.CharField(max_length=20, unique=True, verbose_name='Data Type')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
            options={
                'verbose_name': 'Data Type',
                'verbose_name_plural': 'Data Types',
                'db_table': 'data_type',
            },
        ),
        migrations.CreateModel(
            name='EpsgCode',
            fields=[
                ('epsg_code_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Band Type ID')),
                ('collection_id', models.ForeignKey(db_column='collection_id', on_delete=django.db.models.deletion.CASCADE, related_name='collections', to='lcd.Collection')),
            ],
            options={
                'verbose_name': 'EPSG Code',
                'verbose_name_plural': 'EPSG Codes',
                'db_table': 'epsg_code',
            },
        ),
        migrations.CreateModel(
            name='EpsgType',
            fields=[
                ('epsg_type_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='EPSG Type ID')),
                ('epsg_code', models.PositiveIntegerField(unique=True, verbose_name='EPSG Code')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
            options={
                'verbose_name': 'EPSG Type',
                'verbose_name_plural': 'EPSG Types',
                'db_table': 'epsg_type',
            },
        ),
        migrations.CreateModel(
            name='FileType',
            fields=[
                ('file_type_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='File Type ID')),
                ('file_type', models.CharField(max_length=25, unique=True, verbose_name='File Type')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
            options={
                'verbose_name': 'File Type',
                'verbose_name_plural': 'File Types',
                'db_table': 'file_type',
            },
        ),
        migrations.CreateModel(
            name='LicenseType',
            fields=[
                ('license_type_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='License Type ID')),
                ('license_abbreviation', models.CharField(max_length=100, verbose_name='License Abbreviation')),
                ('license_name', models.CharField(max_length=200, verbose_name='License Name')),
                ('license_url', models.URLField(blank=True, max_length=255, null=True, verbose_name='License URL')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
            options={
                'verbose_name': 'License',
                'verbose_name_plural': 'Licenses',
                'db_table': 'license_type',
            },
        ),
        migrations.CreateModel(
            name='QQuadType',
            fields=[
                ('q_quad_type_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='QQuad Type ID')),
                ('q_quad_id', models.PositiveSmallIntegerField(unique=True, verbose_name='QQuad ID')),
                ('q_quad_name', models.CharField(max_length=2, verbose_name='QQuad Name')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
            options={
                'verbose_name': 'QQuad',
                'verbose_name_plural': 'QQuads',
                'db_table': 'q_quad_type',
            },
        ),
        migrations.CreateModel(
            name='QuadType',
            fields=[
                ('quad_type_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Quad Type ID')),
                ('usgs_doq_id', models.PositiveIntegerField(unique=True, verbose_name='USGS DOQ ID')),
                ('usgs_doq_name', models.CharField(max_length=40, verbose_name='USGS DOQ Name')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
            options={
                'verbose_name': 'Quad',
                'verbose_name_plural': 'Quads',
                'db_table': 'quad_type',
            },
        ),
        migrations.CreateModel(
            name='ResolutionType',
            fields=[
                ('resolution_type_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Resolution Type ID')),
                ('resolution', models.CharField(max_length=20, unique=True, verbose_name='Resolution')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
            options={
                'verbose_name': 'Resolution Type',
                'verbose_name_plural': 'Resolution Types',
                'db_table': 'resolution_type',
            },
        ),
        migrations.CreateModel(
            name='SourceType',
            fields=[
                ('source_type_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Source Type ID')),
                ('source_name', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='Source Name')),
                ('source_abbreviation', models.CharField(max_length=10, verbose_name='Source Abbreviation')),
                ('source_website', models.URLField(blank=True, max_length=255, null=True, verbose_name='Source Website')),
                ('source_contact', models.CharField(blank=True, max_length=255, null=True, verbose_name='Source Contact')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
            options={
                'verbose_name': 'Source',
                'verbose_name_plural': 'Sources',
                'db_table': 'source_type',
            },
        ),
        migrations.CreateModel(
            name='StateType',
            fields=[
                ('state_type_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='State Type ID')),
                ('state_fips', models.PositiveIntegerField(null=True, verbose_name='State FIPS')),
                ('state_name', models.CharField(max_length=25, verbose_name='State Name')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
            options={
                'verbose_name': 'State',
                'verbose_name_plural': 'States',
                'db_table': 'state_type',
            },
        ),
        migrations.CreateModel(
            name='TemplateType',
            fields=[
                ('template_type_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Template Type ID')),
                ('template', models.CharField(max_length=100, unique=True, verbose_name='Template')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
            options={
                'verbose_name': 'Template',
                'verbose_name_plural': 'Templates',
                'db_table': 'template_type',
            },
        ),
        migrations.CreateModel(
            name='UseType',
            fields=[
                ('use_type_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Use Type ID')),
                ('use_type', models.CharField(max_length=100, unique=True, verbose_name='Use')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
            options={
                'verbose_name': 'Use type',
                'verbose_name_plural': 'Use Types',
                'db_table': 'use_type',
            },
        ),
        migrations.CreateModel(
            name='UsngType',
            fields=[
                ('usng_1000_type_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='USNG 1000 Type ID')),
                ('utm_grid_zone', models.CharField(max_length=4, verbose_name='UTM Grid Zone')),
                ('hk_meter_square', models.CharField(max_length=2, verbose_name='100000 Meter Square')),
                ('grid_coordinates', models.PositiveIntegerField(verbose_name='Grid Coordinates')),
                ('usng_name', models.CharField(max_length=16, verbose_name='USNG Name')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
            options={
                'verbose_name': 'US National Grid',
                'verbose_name_plural': 'US National Grids',
                'db_table': 'usng_1000_type',
            },
        ),
        migrations.CreateModel(
            name='ZippedByAreaType',
            fields=[
                ('zipped_by_area_type_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Zipped By Area Type ID')),
                ('zipped_by_area_type', models.CharField(choices=[('state', 'state'), ('county', 'county'), ('quad', 'quad'), ('qquad', 'qquad'), ('natgrid', 'natgrid')], max_length=20, verbose_name='Zipped By Area Type')),
                ('zipped_by_area_type_name', models.CharField(max_length=50, verbose_name='Zipped By Area Name')),
                ('orig_data_download_id', models.PositiveIntegerField(null=True, verbose_name='Original Data Download ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
            options={
                'verbose_name': 'Zipped By Area Type',
                'verbose_name_plural': 'Zipped By Area Types',
                'db_table': 'zipped_by_area_type',
            },
        ),
        migrations.AlterUniqueTogether(
            name='zippedbyareatype',
            unique_together={('zipped_by_area_type', 'zipped_by_area_type_name')},
        ),
        migrations.AlterUniqueTogether(
            name='usngtype',
            unique_together={('utm_grid_zone', 'hk_meter_square', 'grid_coordinates')},
        ),
        migrations.AlterUniqueTogether(
            name='statetype',
            unique_together={('state_fips', 'state_name')},
        ),
        migrations.AlterUniqueTogether(
            name='sourcetype',
            unique_together={('source_name', 'source_abbreviation')},
        ),
        migrations.AlterUniqueTogether(
            name='quadtype',
            unique_together={('usgs_doq_id', 'usgs_doq_name')},
        ),
        migrations.AlterUniqueTogether(
            name='qquadtype',
            unique_together={('q_quad_id', 'q_quad_name')},
        ),
        migrations.AlterUniqueTogether(
            name='licensetype',
            unique_together={('license_abbreviation', 'license_name', 'license_url')},
        ),
        migrations.AddField(
            model_name='epsgcode',
            name='epsg_type_id',
            field=models.ForeignKey(db_column='epsg_type_id', on_delete=django.db.models.deletion.CASCADE, related_name='epsg_types', to='lcd.EpsgType'),
        ),
        migrations.AlterUniqueTogether(
            name='countytype',
            unique_together={('county_fips', 'county_name')},
        ),
        migrations.AlterUniqueTogether(
            name='bandtype',
            unique_together={('band_name', 'band_abbreviation')},
        ),
    ]
