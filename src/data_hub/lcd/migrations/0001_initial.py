# Generated by Django 2.0.6 on 2018-07-13 18:31

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AreaType',
            fields=[
                ('area_type_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Area Type ID')),
                ('area_type', models.TextField(choices=[('state', 'state'), ('county', 'county'), ('quad', 'quad'), ('qquad', 'qquad'), ('natgrid', 'natgrid')], max_length=20, verbose_name='Area Type')),
                ('area_type_name', models.TextField(max_length=50, verbose_name='Area Type Name')),
                ('orig_data_download_id', models.PositiveIntegerField(null=True, verbose_name='Original Data Download ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
            options={
                'verbose_name': 'Area Type',
                'verbose_name_plural': 'Area Types',
                'db_table': 'area_type',
            },
        ),
        migrations.CreateModel(
            name='BandRelate',
            fields=[
                ('band_relate_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Band Relate ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
            options={
                'verbose_name': 'Band',
                'verbose_name_plural': 'Bands',
                'db_table': 'band_relate',
            },
        ),
        migrations.CreateModel(
            name='BandType',
            fields=[
                ('band_type_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Band Type ID')),
                ('band_name', models.TextField(max_length=100, unique=True, verbose_name='Band Name')),
                ('band_abbreviation', models.TextField(max_length=10, verbose_name='Band Abbreviation')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
            options={
                'verbose_name': 'Band Type',
                'verbose_name_plural': 'Band Types',
                'db_table': 'band_type',
            },
        ),
        migrations.CreateModel(
            name='CategoryRelate',
            fields=[
                ('category_relate_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Category Relate ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'db_table': 'category_relate',
            },
        ),
        migrations.CreateModel(
            name='CategoryType',
            fields=[
                ('category_type_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Category Type ID')),
                ('category', models.TextField(max_length=50, unique=True, verbose_name='Category')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
            options={
                'verbose_name': 'Category Type',
                'verbose_name_plural': 'Category Types',
                'db_table': 'category_type',
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('collection_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Collection ID')),
                ('name', models.TextField(max_length=200, null=True, verbose_name='Name')),
                ('acquisition_date', models.DateField(blank=True, null=True, verbose_name='Acquisiiton Date')),
                ('short_description', models.TextField(blank=True, max_length=400, null=True, verbose_name='Short Description')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('authoritative', models.BooleanField(default=False, verbose_name='Authoritative')),
                ('public', models.BooleanField(default=False, verbose_name='Public')),
                ('known_issues', models.TextField(blank=True, null=True, verbose_name='Known Issues')),
                ('md_filename', models.TextField(blank=True, max_length=120, null=True, verbose_name='Markdown Filename')),
                ('wms_link', models.URLField(blank=True, max_length=255, null=True, verbose_name='WMS Link')),
                ('popup_link', models.URLField(blank=True, max_length=255, null=True, verbose_name='Popup Link')),
                ('carto_map_id', models.TextField(blank=True, max_length=100, null=True, verbose_name='Carto Map ID')),
                ('overview_image', models.TextField(blank=True, max_length=120, null=True, verbose_name='Overview Image')),
                ('thumbnail_image', models.TextField(blank=True, max_length=120, null=True, verbose_name='Thumb Image')),
                ('natural_image', models.TextField(blank=True, max_length=120, null=True, verbose_name='Natural Image')),
                ('urban_image', models.TextField(blank=True, max_length=120, null=True, verbose_name='Urban Image')),
                ('tile_index_url', models.URLField(blank=True, max_length=255, null=True, verbose_name='Tile Index URL')),
                ('supplemental_report_url', models.URLField(blank=True, max_length=255, null=True, verbose_name='Supplemental Report URL')),
                ('lidar_breaklines_url', models.URLField(blank=True, max_length=255, null=True, verbose_name='Lidar Breaklines URL')),
                ('coverage_extent', models.TextField(blank=True, max_length=255, null=True, verbose_name='Coverage Extent')),
                ('tags', models.TextField(blank=True, null=True, verbose_name='Tags')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
            options={
                'verbose_name': 'Collection',
                'verbose_name_plural': 'Collections',
                'db_table': 'collection',
            },
        ),
        migrations.CreateModel(
            name='DataType',
            fields=[
                ('data_type_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Data Type ID')),
                ('data_type', models.TextField(max_length=20, unique=True, verbose_name='Data Type')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
            options={
                'verbose_name': 'Data Type',
                'verbose_name_plural': 'Data Types',
                'db_table': 'data_type',
            },
        ),
        migrations.CreateModel(
            name='DataTypeRelate',
            fields=[
                ('data_type_relate_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Data Type Relate ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
                ('collection_id', models.ForeignKey(db_column='collection_id', on_delete=django.db.models.deletion.CASCADE, related_name='data_type_collections', to='lcd.Collection')),
                ('data_type_id', models.ForeignKey(db_column='data_type_id', on_delete=django.db.models.deletion.CASCADE, related_name='data_types', to='lcd.DataType')),
            ],
            options={
                'verbose_name': 'Data Type',
                'verbose_name_plural': 'Data Types',
                'db_table': 'data_type_relate',
            },
        ),
        migrations.CreateModel(
            name='EpsgRelate',
            fields=[
                ('epsg_relate_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='EPSG Relate ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
                ('collection_id', models.ForeignKey(db_column='collection_id', on_delete=django.db.models.deletion.CASCADE, related_name='epsg_collections', to='lcd.Collection')),
            ],
            options={
                'verbose_name': 'EPSG Code',
                'verbose_name_plural': 'EPSG Codes',
                'db_table': 'epsg_relate',
            },
        ),
        migrations.CreateModel(
            name='EpsgType',
            fields=[
                ('epsg_type_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='EPSG Type ID')),
                ('epsg_code', models.PositiveIntegerField(unique=True, verbose_name='EPSG Code')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
            options={
                'verbose_name': 'EPSG Type',
                'verbose_name_plural': 'EPSG Types',
                'db_table': 'epsg_type',
            },
        ),
        migrations.CreateModel(
            name='FileType',
            fields=[
                ('file_type_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='File Type ID')),
                ('file_type', models.TextField(max_length=25, unique=True, verbose_name='File Type')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
            options={
                'verbose_name': 'File Type',
                'verbose_name_plural': 'File Types',
                'db_table': 'file_type',
            },
        ),
        migrations.CreateModel(
            name='FileTypeRelate',
            fields=[
                ('file_type_relate_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='File Type Relate ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
                ('collection_id', models.ForeignKey(db_column='collection_id', on_delete=django.db.models.deletion.CASCADE, related_name='file_type_collections', to='lcd.Collection')),
                ('file_type_id', models.ForeignKey(db_column='file_type_id', on_delete=django.db.models.deletion.CASCADE, related_name='file_types', to='lcd.FileType')),
            ],
            options={
                'verbose_name': 'File Type',
                'verbose_name_plural': 'File Types',
                'db_table': 'file_type_relate',
            },
        ),
        migrations.CreateModel(
            name='LicenseType',
            fields=[
                ('license_type_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='License Type ID')),
                ('license_abbreviation', models.TextField(max_length=100, verbose_name='License Abbreviation')),
                ('license_name', models.TextField(max_length=200, verbose_name='License Name')),
                ('license_url', models.URLField(blank=True, max_length=255, null=True, verbose_name='License URL')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
            options={
                'verbose_name': 'License Type',
                'verbose_name_plural': 'License Types',
                'db_table': 'license_type',
            },
        ),
        migrations.CreateModel(
            name='ResolutionRelate',
            fields=[
                ('resolution_relate_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Resolution Relate ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
                ('collection_id', models.ForeignKey(db_column='collection_id', on_delete=django.db.models.deletion.CASCADE, related_name='resolution_collections', to='lcd.Collection')),
            ],
            options={
                'verbose_name': 'Resolution',
                'verbose_name_plural': 'Resolutions',
                'db_table': 'resolution_relate',
            },
        ),
        migrations.CreateModel(
            name='ResolutionType',
            fields=[
                ('resolution_type_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Resolution Type ID')),
                ('resolution', models.TextField(max_length=20, unique=True, verbose_name='Resolution')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
            options={
                'verbose_name': 'Resolution Type',
                'verbose_name_plural': 'Resolution Types',
                'db_table': 'resolution_type',
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('resource_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Resource ID')),
                ('resource_type', models.TextField(choices=[('download', 'download'), ('order', 'order'), ('website', 'website')], max_length=20, verbose_name='Resource Type')),
                ('resource', models.URLField(max_length=255, verbose_name='Resource URL')),
                ('filesize', models.PositiveIntegerField(verbose_name='Filesize')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
                ('area_type_id', models.ForeignKey(db_column='area_type_id', on_delete=django.db.models.deletion.CASCADE, related_name='area_types', to='lcd.AreaType')),
                ('collection_id', models.ForeignKey(db_column='collection_id', on_delete=django.db.models.deletion.CASCADE, related_name='collections', to='lcd.Collection')),
            ],
            options={
                'verbose_name': 'Resource',
                'verbose_name_plural': 'Resources',
                'db_table': 'resource',
            },
        ),
        migrations.CreateModel(
            name='SourceType',
            fields=[
                ('source_type_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Source Type ID')),
                ('source_name', models.TextField(blank=True, max_length=100, null=True, verbose_name='Source Name')),
                ('source_abbreviation', models.TextField(max_length=10, verbose_name='Source Abbreviation')),
                ('source_website', models.URLField(blank=True, max_length=255, null=True, verbose_name='Source Website')),
                ('source_contact', models.TextField(blank=True, max_length=255, null=True, verbose_name='Source Contact')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
            options={
                'verbose_name': 'Source Type',
                'verbose_name_plural': 'Source Types',
                'db_table': 'source_type',
            },
        ),
        migrations.CreateModel(
            name='TemplateType',
            fields=[
                ('template_type_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Template Type ID')),
                ('template', models.TextField(max_length=100, unique=True, verbose_name='Template')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
            options={
                'verbose_name': 'Template Type',
                'verbose_name_plural': 'Template Types',
                'db_table': 'template_type',
            },
        ),
        migrations.CreateModel(
            name='UseRelate',
            fields=[
                ('use_relate_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Use Relate ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
                ('collection_id', models.ForeignKey(db_column='collection_id', on_delete=django.db.models.deletion.CASCADE, related_name='use_collections', to='lcd.Collection')),
            ],
            options={
                'verbose_name': 'Use',
                'verbose_name_plural': 'Uses',
                'db_table': 'use_relate',
            },
        ),
        migrations.CreateModel(
            name='UseType',
            fields=[
                ('use_type_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Use Type ID')),
                ('use_type', models.TextField(max_length=100, unique=True, verbose_name='Use')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
            options={
                'verbose_name': 'Use type',
                'verbose_name_plural': 'Use Types',
                'db_table': 'use_type',
            },
        ),
        migrations.AddField(
            model_name='userelate',
            name='use_type_id',
            field=models.ForeignKey(db_column='use_type_id', on_delete=django.db.models.deletion.CASCADE, related_name='use_types', to='lcd.UseType'),
        ),
        migrations.AlterUniqueTogether(
            name='sourcetype',
            unique_together={('source_name', 'source_abbreviation', 'source_website', 'source_contact')},
        ),
        migrations.AddField(
            model_name='resolutionrelate',
            name='resolution_type_id',
            field=models.ForeignKey(db_column='resolution_type_id', on_delete=django.db.models.deletion.CASCADE, related_name='resolution_types', to='lcd.ResolutionType'),
        ),
        migrations.AlterUniqueTogether(
            name='licensetype',
            unique_together={('license_abbreviation', 'license_name', 'license_url')},
        ),
        migrations.AddField(
            model_name='epsgrelate',
            name='epsg_type_id',
            field=models.ForeignKey(db_column='epsg_type_id', on_delete=django.db.models.deletion.CASCADE, related_name='epsg_types', to='lcd.EpsgType'),
        ),
        migrations.AddField(
            model_name='collection',
            name='license_type_id',
            field=models.ForeignKey(blank=True, db_column='license_type_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='license_types', to='lcd.LicenseType'),
        ),
        migrations.AddField(
            model_name='collection',
            name='source_type_id',
            field=models.ForeignKey(blank=True, db_column='Source_type_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='source_types', to='lcd.SourceType'),
        ),
        migrations.AddField(
            model_name='collection',
            name='template_type_id',
            field=models.ForeignKey(blank=True, db_column='template_type_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='template_types', to='lcd.TemplateType'),
        ),
        migrations.AddField(
            model_name='categoryrelate',
            name='category_type_id',
            field=models.ForeignKey(db_column='category_type_id', on_delete=django.db.models.deletion.CASCADE, related_name='category_types', to='lcd.CategoryType'),
        ),
        migrations.AddField(
            model_name='categoryrelate',
            name='collection_id',
            field=models.ForeignKey(db_column='collection_id', on_delete=django.db.models.deletion.CASCADE, related_name='category_collections', to='lcd.Collection'),
        ),
        migrations.AlterUniqueTogether(
            name='bandtype',
            unique_together={('band_name', 'band_abbreviation')},
        ),
        migrations.AddField(
            model_name='bandrelate',
            name='band_type_id',
            field=models.ForeignKey(db_column='band_type_id', on_delete=django.db.models.deletion.CASCADE, related_name='band_types', to='lcd.BandType'),
        ),
        migrations.AddField(
            model_name='bandrelate',
            name='collection_id',
            field=models.ForeignKey(db_column='collection_id', on_delete=django.db.models.deletion.CASCADE, related_name='band_collections', to='lcd.Collection'),
        ),
        migrations.AlterUniqueTogether(
            name='areatype',
            unique_together={('area_type', 'area_type_name')},
        ),
        migrations.AlterUniqueTogether(
            name='userelate',
            unique_together={('use_type_id', 'collection_id')},
        ),
        migrations.AlterUniqueTogether(
            name='resource',
            unique_together={('resource_type', 'resource', 'area_type_id', 'collection_id')},
        ),
        migrations.AlterUniqueTogether(
            name='resolutionrelate',
            unique_together={('resolution_type_id', 'collection_id')},
        ),
        migrations.AlterUniqueTogether(
            name='filetyperelate',
            unique_together={('file_type_id', 'collection_id')},
        ),
        migrations.AlterUniqueTogether(
            name='epsgrelate',
            unique_together={('epsg_type_id', 'collection_id')},
        ),
        migrations.AlterUniqueTogether(
            name='datatyperelate',
            unique_together={('data_type_id', 'collection_id')},
        ),
        migrations.AlterUniqueTogether(
            name='collection',
            unique_together={('name', 'acquisition_date', 'short_description', 'description', 'authoritative', 'public', 'known_issues', 'md_filename', 'wms_link', 'popup_link', 'carto_map_id', 'overview_image', 'thumbnail_image', 'natural_image', 'urban_image', 'tile_index_url', 'supplemental_report_url', 'lidar_breaklines_url', 'coverage_extent', 'tags', 'license_type_id', 'source_type_id', 'template_type_id')},
        ),
        migrations.AlterUniqueTogether(
            name='categoryrelate',
            unique_together={('category_type_id', 'collection_id')},
        ),
    ]
